{"ast":null,"code":"import nextConnect from 'next-connect';\nimport middleware from '../../middleware/database';\n\nvar moment = require('moment');\n\nmoment().format('L');\nconst handler = nextConnect();\nhandler.use(middleware);\nhandler.post(async (req, res) => {\n  let data = req.body;\n  data = JSON.parse(data);\n  let doc = await req.db.collection('inventory').updateOne({\n    name: data.name\n  }, {\n    $inc: {\n      qty: -data.incrementAmt\n    }\n  }, {\n    upsert: false\n  });\n  res.json({\n    message: 'ok'\n  });\n});\nexport default handler;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/api/inventoryUpdate.js"],"names":["nextConnect","middleware","moment","require","format","handler","use","post","req","res","data","body","JSON","parse","doc","db","collection","updateOne","name","$inc","qty","incrementAmt","upsert","json","message"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,IAAIC,MAAM,GAAIC,OAAO,CAAC,QAAD,CAArB;;AACAD,MAAM,GAAGE,MAAT,CAAgB,GAAhB;AAEA,MAAMC,OAAO,GAAGL,WAAW,EAA3B;AACAK,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAEAI,OAAO,CAACE,IAAR,CAAa,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC7B,MAAIC,IAAI,GAAGF,GAAG,CAACG,IAAf;AACAD,EAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACA,MAAII,GAAG,GAAG,MAAMN,GAAG,CAACO,EAAJ,CAAOC,UAAP,CAAkB,WAAlB,EAA+BC,SAA/B,CAAyC;AAACC,IAAAA,IAAI,EAAER,IAAI,CAACQ;AAAZ,GAAzC,EAA4D;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,GAAG,EAAE,CAACV,IAAI,CAACW;AAAZ;AAAP,GAA5D,EAA+F;AAACC,IAAAA,MAAM,EAAE;AAAT,GAA/F,CAAhB;AAEAb,EAAAA,GAAG,CAACc,IAAJ,CAAS;AAACC,IAAAA,OAAO,EAAE;AAAV,GAAT;AACH,CAND;AAQA,eAAenB,OAAf","sourcesContent":["import nextConnect from 'next-connect';\r\nimport middleware from '../../middleware/database';\r\n\r\nvar moment  = require('moment')\r\nmoment().format('L'); \r\n\r\nconst handler = nextConnect();\r\nhandler.use(middleware);\r\n\r\nhandler.post(async (req, res) => {\r\n    let data = req.body\r\n    data = JSON.parse(data);\r\n    let doc = await req.db.collection('inventory').updateOne({name: data.name}, {$inc: {qty: -data.incrementAmt}}, {upsert: false})\r\n\r\n    res.json({message: 'ok'});\r\n})\r\n\r\nexport default handler;"]},"metadata":{},"sourceType":"module"}