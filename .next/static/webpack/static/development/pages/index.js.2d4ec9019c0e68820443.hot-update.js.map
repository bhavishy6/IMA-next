{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2d4ec9019c0e68820443.hot-update.js","sources":["webpack:///./components/forms/IMANewSaleForm.js"],"sourcesContent":["import { Formik, Form, useField, FieldArray } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nvar moment = require('moment')\r\nmoment().format('L');\r\n\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyDateInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// Styled components ....\r\nconst StyledSelect = styled.select`\r\n    color: var(--blue);\r\n  `;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n    font-size: 12px;\r\n    color: var(--red-600);\r\n    width: 400px;\r\n    margin-top: 0.25rem;\r\n    &:before {\r\n      content: \"❌ \";\r\n      font-size: 10px;\r\n    }\r\n    @media (prefers-color-scheme: dark) {\r\n      color: var(--red-300);\r\n    }\r\n  `;\r\n\r\nconst StyledLabel = styled.label`\r\n    margin-top: 1rem;\r\n  `;\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst IMANewSaleForm = props => {\r\n\r\n  return (\r\n    <>\r\n      <h1>Add New Sale</h1>\r\n      <Formik\r\n        initialValues={{\r\n          customerName: \"\",\r\n          date: \"\",\r\n          email: \"\",\r\n          quantities: [] // added for our select\r\n        }}\r\n        validationSchema={Yup.object({\r\n          customerName: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          date: Yup.date()\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <Form>\r\n          <MyTextInput\r\n            label=\"Customer Name\"\r\n            name=\"customerName\"\r\n            type=\"text\"\r\n            placeholder=\"John Doe\"\r\n          />\r\n          <MyDateInput\r\n            label=\"Date of Sale\"\r\n            name=\"date\"\r\n            type=\"date\"\r\n            placeholder={moment()}\r\n          />\r\n          <MyTextInput\r\n            label=\"Customer Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"jane@formik.com\"\r\n          />\r\n          <h3>Add Products Bought</h3>\r\n          <FieldArray\r\n            name=\"quantities\"\r\n            render={({ insert, remove, push }) => (\r\n              <div>\r\n                    <div className=\"row\" key={index}>\r\n                      <div className=\"col\">\r\n                        <label htmlFor={`quantities.${index}.name`}>Name</label>\r\n                        <MyTextInput\r\n                          name={`quantities.${index}.name`}\r\n                          placeholder=\"Iron Sheet\"\r\n                          type=\"text\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <label htmlFor={`quantities.${index}.qty`}>\r\n                          Quantity\r\n                      </label>\r\n                        <MyTextInput\r\n                          name={`quantities.${index}.qty`}\r\n                          placeholder=\"99999\"\r\n                          type=\"number\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col\">\r\n                        <button\r\n                          className=\"secondary\"\r\n                          type=\"remove\"\r\n                          onClick={() => remove(index)}\r\n                        >\r\n                          X\r\n                      </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                <button\r\n                  type=\"add\"\r\n                  className=\"secondary\"\r\n                  onClick={() => push({ name: \"\", qty: \"\" })}\r\n                >\r\n                  Add Product\r\n              </button>\r\n              </div>\r\n            )}\r\n          />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IMANewSaleForm;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAIA;AAcA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AACA;AAGA;AAEA;AANA;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuhCA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}