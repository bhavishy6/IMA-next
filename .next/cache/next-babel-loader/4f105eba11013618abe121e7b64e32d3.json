{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport withIMALayout from '../components/IMALayout';\nimport IMADaysAgoForm from '../components/IMADashBoardAgoForm';\nimport fetch from 'isomorphic-unfetch';\n\nvar Dashboard = function Dashboard(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var data = {\n    calories: {\n      label: \"Calories\",\n      total: 1840,\n      target: 1850,\n      variant: 150\n    },\n    carbs: {\n      label: \"Carbs\",\n      total: 190,\n      target: 160,\n      variant: 15\n    },\n    fat: {\n      label: \"Fat\",\n      total: 55,\n      target: 60,\n      variant: 10\n    }\n  };\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var onChange = function onChange(e) {\n    var data = _objectSpread({}, results);\n\n    var name = e.target.name;\n    var resultCollection = name.split(\" \")[0].toLowerCase();\n    var resultType = name.split(\" \")[1].toLowerCase();\n    data[resultCollection][resultType] = e.target.value;\n    setResults(data);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(IMADashBoardAgoForm, {\n    collection: \"Sales\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(IMADashBoardAgoForm, {\n    collection: \"Customers\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + 30));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar updateDaysAgoValue = function updateDaysAgoValue(evt) {\n  _this.daysAgo = evt.target.value;\n};\n\nvar getSalesFromDaysAgo = function getSalesFromDaysAgo() {\n  var res, json;\n  return _regeneratorRuntime.async(function getSalesFromDaysAgo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context2.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nfunction getMostRecentFormattedSales(sales) {\n  return sales;\n}\n\n;\nexport default withIMALayout(Dashboard);","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/index.js"],"names":["withIMALayout","IMADaysAgoForm","fetch","Dashboard","data","calories","label","total","target","variant","carbs","fat","useState","results","setResults","onChange","e","name","resultCollection","split","toLowerCase","resultType","value","getInitialProps","res","json","console","log","getMostRecentFormattedSales","updateDaysAgoValue","evt","daysAgo","getSalesFromDaysAgo","sales"],"mappings":"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","sourcesContent":["import withIMALayout from '../components/IMALayout'\r\nimport IMADaysAgoForm from '../components/IMADashBoardAgoForm'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Dashboard = ({ }) => {\r\n    let data = {\r\n        calories: {\r\n          label: \"Calories\",\r\n          total: 1840,\r\n          target: 1850,\r\n          variant: 150\r\n        },\r\n        carbs: {\r\n          label: \"Carbs\",\r\n          total: 190,\r\n          target: 160,\r\n          variant: 15\r\n        },\r\n        fat: {\r\n          label: \"Fat\",\r\n          total: 55,\r\n          target: 60,\r\n          variant: 10\r\n        }\r\n    }\r\n\r\n    const [results, setResults] = useState(data);\r\n\r\n    const onChange = (e) => {\r\n        const data = { ...results };\r\n\r\n        let name = e.target.name;\r\n\r\n        let resultCollection = name.split(\" \")[0].toLowerCase();\r\n        let resultType = name.split(\" \")[1].toLowerCase();\r\n\r\n        data[resultCollection][resultType] = e.target.value;\r\n\r\n        setResults(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IMADashBoardAgoForm collection=\"Sales\" onChange={onChange} />\r\n            <IMADashBoardAgoForm collection=\"Customers\" onChange={onChange} />\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nDashboard.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nconst updateDaysAgoValue = (evt) => {\r\n    this.daysAgo = evt.target.value;\r\n}\r\n\r\nconst getSalesFromDaysAgo = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nfunction getMostRecentFormattedSales(sales) {\r\n    return sales;\r\n};\r\n\r\nexport default withIMALayout(Dashboard);"]},"metadata":{},"sourceType":"module"}