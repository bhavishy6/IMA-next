{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withIMALayout from '../components/IMALayout';\nimport IMADaysAgoForm from '../components/IMADaysAgoForm';\nimport fetch from 'isomorphic-unfetch';\n\nvar Dashboard = function Dashboard(_ref) {\n  var daysAgo = _ref.daysAgo;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(IMADaysAgoForm, {\n    data: results,\n    collection: \"Sales\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Days Ago\"), __jsx(\"input\", {\n    type: \"number\",\n    className: \"daysAgoInput\",\n    value: _this.daysAgo,\n    onChange: updateDaysAgoValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: getSalesFromDaysAgo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Get\"));\n};\n\nDashboard.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + 30));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar updateDaysAgoValue = function updateDaysAgoValue(evt) {\n  _this.daysAgo = evt.target.value;\n};\n\nvar getSalesFromDaysAgo = function getSalesFromDaysAgo() {\n  var res, json;\n  return _regeneratorRuntime.async(function getSalesFromDaysAgo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context2.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nfunction getMostRecentFormattedSales(sales) {\n  return sales;\n}\n\n;\nexport default withIMALayout(Dashboard);","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/index.js"],"names":["withIMALayout","IMADaysAgoForm","fetch","Dashboard","daysAgo","results","onChange","updateDaysAgoValue","getSalesFromDaysAgo","getInitialProps","res","json","console","log","data","getMostRecentFormattedSales","evt","target","value","sales"],"mappings":";;;;;;;;AAAA,OAAOA,aAAP,MAA0B,yBAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,IAAI,EAAEC,OAAtB;AAA+B,IAAA,UAAU,EAAC,OAA1C;AAAkD,IAAA,QAAQ,EAAEC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAA8C,IAAA,KAAK,EAAE,KAAI,CAACF,OAA1D;AAAmE,IAAA,QAAQ,EAAEG,kBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAQ,IAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CADc;AAAA,CAAlB;;AAUAL,SAAS,CAACM,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNP,KAAK,CAAC,6CAA6C,EAA9C,CADC;;AAAA;AAClBQ,UAAAA,GADkB;AAAA;AAAA,2CAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBA,UAAAA,IAFkB;AAGxBC,UAAAA,OAAO,CAACC,GAAR,8BAAkC,gBAAeF,IAAf,CAAlC;AAHwB,2CAIjB;AAAEG,YAAAA,IAAI,EAAEC,2BAA2B,CAACJ,IAAD;AAAnC,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAOA,IAAMJ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACS,GAAD,EAAS;AAChC,EAAA,KAAI,CAACZ,OAAL,GAAeY,GAAG,CAACC,MAAJ,CAAWC,KAA1B;AACH,CAFD;;AAIA,IAAMV,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNN,KAAK,CAAC,6CAA6CE,OAA9C,CADC;;AAAA;AAClBM,UAAAA,GADkB;AAAA;AAAA,2CAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBA,UAAAA,IAFkB;AAGxBC,UAAAA,OAAO,CAACC,GAAR,8BAAkC,gBAAeF,IAAf,CAAlC;AAHwB,4CAIjB;AAAEG,YAAAA,IAAI,EAAEC,2BAA2B,CAACJ,IAAD;AAAnC,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAOA,SAASI,2BAAT,CAAqCI,KAArC,EAA4C;AACxC,SAAOA,KAAP;AACH;;AAAA;AAED,eAAenB,aAAa,CAACG,SAAD,CAA5B","sourcesContent":["import withIMALayout from '../components/IMALayout'\r\nimport IMADaysAgoForm from '../components/IMADaysAgoForm'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Dashboard = ({daysAgo}) => (\r\n    <div>\r\n        <IMADaysAgoForm data={results} collection=\"Sales\" onChange={onChange} />\r\n        \r\n        <label className=\"block\">Days Ago</label>\r\n        <input type=\"number\" className=\"daysAgoInput\" value={this.daysAgo} onChange={updateDaysAgoValue}></input>\r\n        <button onClick={getSalesFromDaysAgo}>Get</button>\r\n    </div>\r\n);\r\n\r\nDashboard.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nconst updateDaysAgoValue = (evt) => {\r\n    this.daysAgo=  evt.target.value;\r\n}\r\n\r\nconst getSalesFromDaysAgo = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nfunction getMostRecentFormattedSales(sales) {\r\n    return sales;\r\n};\r\n\r\nexport default withIMALayout(Dashboard);"]},"metadata":{},"sourceType":"module"}