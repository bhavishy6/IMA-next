{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\inventory.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport IMALayout from '../components/IMALayout';\nimport { ReactTabulator } from 'react-tabulator';\n\nvar InventoryPage = function InventoryPage(props) {\n  return __jsx(IMALayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Inventory management table.\"));\n};\n\nInventoryPage.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/inventory'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"Inventory fetched.\".concat(_JSON$stringify(json)));\n          return _context.abrupt(\"return\", {\n            inventory: json,\n            columns: [{\n              title: \"Product Name\",\n              field: \"name\",\n              width: 150\n            }]\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default InventoryPage;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/inventory.js"],"names":["fetch","IMALayout","ReactTabulator","InventoryPage","props","getInitialProps","res","json","console","log","inventory","columns","title","field","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3B,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CADJ;AAQH,CATD;;AAWAD,aAAa,CAACE,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACVL,KAAK,CAAC,qCAAD,CADK;;AAAA;AACtBM,UAAAA,GADsB;AAAA;AAAA,2CAETA,GAAG,CAACC,IAAJ,EAFS;;AAAA;AAEtBA,UAAAA,IAFsB;AAG5BC,UAAAA,OAAO,CAACC,GAAR,6BAAiC,gBAAeF,IAAf,CAAjC;AAH4B,2CAIrB;AAAEG,YAAAA,SAAS,EAAEH,IAAb;AACEI,YAAAA,OAAO,EAAE,CACN;AAAEC,cAAAA,KAAK,EAAE,cAAT;AAAyBC,cAAAA,KAAK,EAAE,MAAhC;AAAwCC,cAAAA,KAAK,EAAE;AAA/C,aADM;AADX,WAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAUA,eAAeX,aAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport IMALayout from '../components/IMALayout';\r\nimport { ReactTabulator } from 'react-tabulator'; \r\n\r\nconst InventoryPage = props => {\r\n    return (\r\n        <IMALayout>\r\n            <div className=\"container\">\r\n                Inventory management table.\r\n                {/* <ReactTabulator columns={columns} data={props.inventory} options={} /> */}\r\n            </div>\r\n        </IMALayout>\r\n    );\r\n}\r\n\r\nInventoryPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/inventory')\r\n    const json = await res.json()\r\n    console.log(`Inventory fetched.${JSON.stringify(json)}`);\r\n    return { inventory: json, \r\n             columns: [\r\n                { title: \"Product Name\", field: \"name\", width: 150 },\r\n             ]}\r\n}\r\n\r\nexport default InventoryPage;"]},"metadata":{},"sourceType":"module"}