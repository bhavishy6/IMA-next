{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime-corejs2/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\index.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport withIMALayout from '../components/IMALayout';\nimport IMADaysAgoForm from '../components/IMADaysAgoForm';\nimport fetch from 'isomorphic-unfetch';\n\nvar Dashboard = function Dashboard(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var data = {\n    daysAgo: 260\n  };\n\n  var onChange = function onChange(e) {\n    var data = _objectSpread({}, results);\n\n    var name = e.target.name;\n    var resultType = name.split(\" \")[0].toLowerCase();\n    var resultCollection = name.split(\" \")[1].toLowerCase();\n    data[resultMacro][resultType] = e.target.value;\n    setResults(data);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(IMADaysAgoForm, {\n    collection: \"Sales\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + 30));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar updateDaysAgoValue = function updateDaysAgoValue(evt) {\n  _this.daysAgo = evt.target.value;\n};\n\nvar getSalesFromDaysAgo = function getSalesFromDaysAgo() {\n  var res, json;\n  return _regeneratorRuntime.async(function getSalesFromDaysAgo$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo));\n\n        case 2:\n          res = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context2.sent;\n          console.log(\"Show data fetched. \".concat(_JSON$stringify(json)));\n          return _context2.abrupt(\"return\", {\n            data: getMostRecentFormattedSales(json)\n          });\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nfunction getMostRecentFormattedSales(sales) {\n  return sales;\n}\n\n;\nexport default withIMALayout(Dashboard);","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/index.js"],"names":["withIMALayout","IMADaysAgoForm","fetch","Dashboard","data","daysAgo","onChange","e","results","name","target","resultType","split","toLowerCase","resultCollection","resultMacro","value","setResults","getInitialProps","res","json","console","log","getMostRecentFormattedSales","updateDaysAgoValue","evt","getSalesFromDaysAgo","sales"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,yBAA1B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAS;AAAA;;AACvB,MAAIC,IAAI,GAAG;AACPC,IAAAA,OAAO,EAAE;AADF,GAAX;;AAGA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;AACpB,QAAMH,IAAI,qBAAQI,OAAR,CAAV;;AAEA,QAAIC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASD,IAApB;AAEA,QAAIE,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,WAAnB,EAAjB;AACA,QAAIC,gBAAgB,GAAGL,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,WAAnB,EAAvB;AAEAT,IAAAA,IAAI,CAACW,WAAD,CAAJ,CAAkBJ,UAAlB,IAAgCJ,CAAC,CAACG,MAAF,CAASM,KAAzC;AAEAC,IAAAA,UAAU,CAACb,IAAD,CAAV;AACH,GAXD;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAgB,IAAA,UAAU,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAEE,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAvBD;;AAyBAH,SAAS,CAACe,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNhB,KAAK,CAAC,6CAA6C,EAA9C,CADC;;AAAA;AAClBiB,UAAAA,GADkB;AAAA;AAAA,2CAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBA,UAAAA,IAFkB;AAGxBC,UAAAA,OAAO,CAACC,GAAR,8BAAkC,gBAAeF,IAAf,CAAlC;AAHwB,2CAIjB;AAAEhB,YAAAA,IAAI,EAAEmB,2BAA2B,CAACH,IAAD;AAAnC,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAOA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,GAAD,EAAS;AAChC,EAAA,KAAI,CAACpB,OAAL,GAAeoB,GAAG,CAACf,MAAJ,CAAWM,KAA1B;AACH,CAFD;;AAIA,IAAMU,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACNxB,KAAK,CAAC,6CAA6CG,OAA9C,CADC;;AAAA;AAClBc,UAAAA,GADkB;AAAA;AAAA,2CAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBA,UAAAA,IAFkB;AAGxBC,UAAAA,OAAO,CAACC,GAAR,8BAAkC,gBAAeF,IAAf,CAAlC;AAHwB,4CAIjB;AAAEhB,YAAAA,IAAI,EAAEmB,2BAA2B,CAACH,IAAD;AAAnC,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAOA,SAASG,2BAAT,CAAqCI,KAArC,EAA4C;AACxC,SAAOA,KAAP;AACH;;AAAA;AAED,eAAe3B,aAAa,CAACG,SAAD,CAA5B","sourcesContent":["import withIMALayout from '../components/IMALayout'\r\nimport IMADaysAgoForm from '../components/IMADaysAgoForm'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Dashboard = ({ }) => {\r\n    let data = {\r\n        daysAgo: 260\r\n    }\r\n    const onChange = (e) => {\r\n        const data = { ...results };\r\n\r\n        let name = e.target.name;\r\n\r\n        let resultType = name.split(\" \")[0].toLowerCase();\r\n        let resultCollection = name.split(\" \")[1].toLowerCase();\r\n\r\n        data[resultMacro][resultType] = e.target.value;\r\n\r\n        setResults(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IMADaysAgoForm collection=\"Sales\" onChange={onChange} />\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nDashboard.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nconst updateDaysAgoValue = (evt) => {\r\n    this.daysAgo = evt.target.value;\r\n}\r\n\r\nconst getSalesFromDaysAgo = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nfunction getMostRecentFormattedSales(sales) {\r\n    return sales;\r\n};\r\n\r\nexport default withIMALayout(Dashboard);"]},"metadata":{},"sourceType":"module"}