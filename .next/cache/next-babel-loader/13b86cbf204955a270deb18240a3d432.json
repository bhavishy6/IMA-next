{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\inventory.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport IMALayout from '../components/IMALayout';\nimport { ReactTabulator } from 'react-tabulator';\n\nconst rowClick = (e, row) => {\n  console.log('ref table: ', this.ref.table); // this is the Tabulator table instance\n\n  console.log('rowClick id: ${row.getData().id}', row, e);\n  this.setState({\n    selectedName: row.getData().name\n  });\n};\n\nconst setData = () => {\n  this.setState({\n    data\n  });\n};\n\nconst clearData = () => {\n  this.setState({\n    data: []\n  });\n};\n\nconst InventoryPage = props => {\n  ref: null;\n\n  return __jsx(IMALayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Inventory management table.\", __jsx(ReactTabulator, {\n    columns: props.columns,\n    data: props.inventory,\n    cellEdited: cell => console.log('cellEdited', cell),\n    dataEdited: newData => console.log('dataEdited', newData),\n    footerElement: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Footer\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};\n\nInventoryPage.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/inventory');\n  const json = await res.json();\n  console.log(`Inventory fetched.${JSON.stringify(json)}`);\n  return {\n    inventory: json,\n    columns: [{\n      title: \"Product Name\",\n      field: \"name\",\n      sorter: \"string\",\n      width: 150\n    }, {\n      title: \"Stock\",\n      field: \"qty\",\n      sorter: \"number\"\n    }, {\n      title: \"Price\",\n      field: \"price\",\n      align: \"right\"\n    }]\n  };\n};\n\nexport default InventoryPage;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/inventory.js"],"names":["fetch","IMALayout","ReactTabulator","rowClick","e","row","console","log","ref","table","setState","selectedName","getData","name","setData","data","clearData","InventoryPage","props","columns","inventory","cell","newData","getInitialProps","res","json","JSON","stringify","title","field","sorter","width","align"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAIA,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKC,GAAL,CAASC,KAApC,EADyB,CACmB;;AAC5CH,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD,EAAqDD,CAArD;AACA,OAAKM,QAAL,CAAc;AAAEC,IAAAA,YAAY,EAAEN,GAAG,CAACO,OAAJ,GAAcC;AAA9B,GAAd;AACH,CAJD;;AAMA,MAAMC,OAAO,GAAG,MAAM;AAClB,OAAKJ,QAAL,CAAc;AAAEK,IAAAA;AAAF,GAAd;AACH,CAFD;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,OAAKN,QAAL,CAAc;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAd;AACH,CAFD;;AAGA,MAAME,aAAa,GAAGC,KAAK,IAAI;AAC3BV,EAAAA,GAAG,EAAE;;AAEL,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEU,KAAK,CAACC,OAA/B;AAAwC,IAAA,IAAI,EAAED,KAAK,CAACE,SAApD;AAA+D,IAAA,UAAU,EAAGC,IAAD,IAAUf,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,IAA1B,CAArF;AACI,IAAA,UAAU,EAAGC,OAAD,IAAahB,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Be,OAA1B,CAD7B;AAEI,IAAA,aAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAUH,CAbD;;AAeAL,aAAa,CAACM,eAAd,GAAgC,YAAY;AACxC,QAAMC,GAAG,GAAG,MAAMxB,KAAK,CAAC,qCAAD,CAAvB;AACA,QAAMyB,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBmB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAqB,EAAtD;AACA,SAAO;AACHL,IAAAA,SAAS,EAAEK,IADR;AAEHN,IAAAA,OAAO,EAAE,CACL;AAAES,MAAAA,KAAK,EAAE,cAAT;AAAyBC,MAAAA,KAAK,EAAE,MAAhC;AAAwCC,MAAAA,MAAM,EAAE,QAAhD;AAA0DC,MAAAA,KAAK,EAAE;AAAjE,KADK,EAEL;AAAEH,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE,KAAzB;AAAgCC,MAAAA,MAAM,EAAE;AAAxC,KAFK,EAGL;AAAEF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE,OAAzB;AAAkCG,MAAAA,KAAK,EAAE;AAAzC,KAHK;AAFN,GAAP;AAQH,CAZD;;AAcA,eAAef,aAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport IMALayout from '../components/IMALayout';\r\nimport { ReactTabulator } from 'react-tabulator';\r\n\r\n\r\n\r\nconst rowClick = (e, row) => {\r\n    console.log('ref table: ', this.ref.table); // this is the Tabulator table instance\r\n    console.log('rowClick id: ${row.getData().id}', row, e);\r\n    this.setState({ selectedName: row.getData().name });\r\n};\r\n\r\nconst setData = () => {\r\n    this.setState({ data });\r\n};\r\nconst clearData = () => {\r\n    this.setState({ data: [] });\r\n};\r\nconst InventoryPage = props => {\r\n    ref: null;\r\n\r\n    return (\r\n        <IMALayout>\r\n            <div className=\"container\">\r\n                Inventory management table.\r\n                <ReactTabulator columns={props.columns} data={props.inventory} cellEdited={(cell) => console.log('cellEdited', cell)}\r\n                    dataEdited={(newData) => console.log('dataEdited', newData)}\r\n                    footerElement={<span>Footer</span>} />\r\n            </div>\r\n        </IMALayout>\r\n    );\r\n}\r\n\r\nInventoryPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/inventory')\r\n    const json = await res.json()\r\n    console.log(`Inventory fetched.${JSON.stringify(json)}`);\r\n    return {\r\n        inventory: json,\r\n        columns: [\r\n            { title: \"Product Name\", field: \"name\", sorter: \"string\", width: 150 },\r\n            { title: \"Stock\", field: \"qty\", sorter: \"number\" },\r\n            { title: \"Price\", field: \"price\", align: \"right\" },\r\n        ]\r\n    }\r\n}\r\n\r\nexport default InventoryPage;"]},"metadata":{},"sourceType":"module"}