{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport withIMALayout from '../components/IMALayout';\nimport IMADaysAgoForm from '../components/IMADashBoardAgoForm';\nimport fetch from 'isomorphic-unfetch';\n\nconst Dashboard = ({}) => {\n  let data = {\n    daysAgo: 260\n  };\n\n  const onChange = e => {\n    const data = _objectSpread({}, results);\n\n    let name = e.target.name;\n    let resultType = name.split(\" \")[0].toLowerCase();\n    let resultCollection = name.split(\" \")[1].toLowerCase();\n    data[resultMacro][resultType] = e.target.value;\n    setResults(data);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(IMADashBoardAgoForm, {\n    collection: \"Sales\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nDashboard.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30);\n  const json = await res.json();\n  console.log(`Show data fetched. ${JSON.stringify(json)}`);\n  return {\n    data: getMostRecentFormattedSales(json)\n  };\n};\n\nconst updateDaysAgoValue = evt => {\n  this.daysAgo = evt.target.value;\n};\n\nconst getSalesFromDaysAgo = async () => {\n  const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo);\n  const json = await res.json();\n  console.log(`Show data fetched. ${JSON.stringify(json)}`);\n  return {\n    data: getMostRecentFormattedSales(json)\n  };\n};\n\nfunction getMostRecentFormattedSales(sales) {\n  return sales;\n}\n\n;\nexport default withIMALayout(Dashboard);","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/index.js"],"names":["withIMALayout","IMADaysAgoForm","fetch","Dashboard","data","daysAgo","onChange","e","results","name","target","resultType","split","toLowerCase","resultCollection","resultMacro","value","setResults","getInitialProps","res","json","console","log","JSON","stringify","getMostRecentFormattedSales","updateDaysAgoValue","evt","getSalesFromDaysAgo","sales"],"mappings":";;;;;;;;;;AAAA,OAAOA,aAAP,MAA0B,yBAA1B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,SAAS,GAAG,CAAC,EAAD,KAAS;AACvB,MAAIC,IAAI,GAAG;AACPC,IAAAA,OAAO,EAAE;AADF,GAAX;;AAGA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACpB,UAAMH,IAAI,qBAAQI,OAAR,CAAV;;AAEA,QAAIC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASD,IAApB;AAEA,QAAIE,UAAU,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,WAAnB,EAAjB;AACA,QAAIC,gBAAgB,GAAGL,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmBC,WAAnB,EAAvB;AAEAT,IAAAA,IAAI,CAACW,WAAD,CAAJ,CAAkBJ,UAAlB,IAAgCJ,CAAC,CAACG,MAAF,CAASM,KAAzC;AAEAC,IAAAA,UAAU,CAACb,IAAD,CAAV;AACH,GAXD;;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,mBAAD;AAAqB,IAAA,UAAU,EAAC,OAAhC;AAAwC,IAAA,QAAQ,EAAEE,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAvBD;;AAyBAH,SAAS,CAACe,eAAV,GAA4B,YAAY;AACpC,QAAMC,GAAG,GAAG,MAAMjB,KAAK,CAAC,6CAA6C,EAA9C,CAAvB;AACA,QAAMkB,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAqB,EAAvD;AACA,SAAO;AAAEhB,IAAAA,IAAI,EAAEqB,2BAA2B,CAACL,IAAD;AAAnC,GAAP;AACH,CALD;;AAOA,MAAMM,kBAAkB,GAAIC,GAAD,IAAS;AAChC,OAAKtB,OAAL,GAAesB,GAAG,CAACjB,MAAJ,CAAWM,KAA1B;AACH,CAFD;;AAIA,MAAMY,mBAAmB,GAAG,YAAY;AACpC,QAAMT,GAAG,GAAG,MAAMjB,KAAK,CAAC,6CAA6CG,OAA9C,CAAvB;AACA,QAAMe,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAqB,EAAvD;AACA,SAAO;AAAEhB,IAAAA,IAAI,EAAEqB,2BAA2B,CAACL,IAAD;AAAnC,GAAP;AACH,CALD;;AAOA,SAASK,2BAAT,CAAqCI,KAArC,EAA4C;AACxC,SAAOA,KAAP;AACH;;AAAA;AAED,eAAe7B,aAAa,CAACG,SAAD,CAA5B","sourcesContent":["import withIMALayout from '../components/IMALayout'\r\nimport IMADaysAgoForm from '../components/IMADashBoardAgoForm'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nconst Dashboard = ({ }) => {\r\n    let data = {\r\n        daysAgo: 260\r\n    }\r\n    const onChange = (e) => {\r\n        const data = { ...results };\r\n\r\n        let name = e.target.name;\r\n\r\n        let resultType = name.split(\" \")[0].toLowerCase();\r\n        let resultCollection = name.split(\" \")[1].toLowerCase();\r\n\r\n        data[resultMacro][resultType] = e.target.value;\r\n\r\n        setResults(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IMADashBoardAgoForm collection=\"Sales\" onChange={onChange} />\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nDashboard.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nconst updateDaysAgoValue = (evt) => {\r\n    this.daysAgo = evt.target.value;\r\n}\r\n\r\nconst getSalesFromDaysAgo = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + daysAgo)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { data: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nfunction getMostRecentFormattedSales(sales) {\r\n    return sales;\r\n};\r\n\r\nexport default withIMALayout(Dashboard);"]},"metadata":{},"sourceType":"module"}