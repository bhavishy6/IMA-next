{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\components\\\\forms\\\\IMANewSaleForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Formik, Form, useField } from \"formik\";\nimport * as Yup from \"yup\";\n\nvar IMANewSaleForm = function IMANewSaleForm(props) {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Subscribe!\"), __jsx(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      acceptedTerms: false,\n      // added for our checkbox\n      jobType: \"\" // added for our select\n\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\n      acceptedTerms: Yup[\"boolean\"]().required(\"Required\").oneOf([true], \"You must accept the terms and conditions.\"),\n      jobType: Yup.string() // specify the set of valid values for job type\n      // @see http://bit.ly/yup-mixed-oneOf\n      .oneOf([\"designer\", \"development\", \"product\", \"other\"], \"Invalid Job Type\").required(\"Required\")\n    }),\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        alert(_JSON$stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(MyTextInput, {\n    label: \"First Name\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"Jane\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(MyTextInput, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Doe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(MyTextInput, {\n    label: \"Email Address\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"jane@formik.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(MySelect, {\n    label: \"Job Type\",\n    name: \"jobType\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Select a job type\"), __jsx(\"option\", {\n    value: \"designer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Designer\"), __jsx(\"option\", {\n    value: \"development\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Developer\"), __jsx(\"option\", {\n    value: \"product\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Product Manager\"), __jsx(\"option\", {\n    value: \"other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Other\")), __jsx(MyCheckbox, {\n    name: \"acceptedTerms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"I accept the terms and conditions\"), __jsx(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default IMANewSaleForm;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/components/forms/IMANewSaleForm.js"],"names":["Formik","Form","useField","Yup","IMANewSaleForm","props","firstName","lastName","email","acceptedTerms","jobType","object","string","max","required","oneOf","values","setSubmitting","setTimeout","alert"],"mappings":"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","sourcesContent":["import { Formik, Form, useField } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst IMANewSaleForm = props => {\r\n\r\n    return (\r\n    <>\r\n      <h1>Subscribe!</h1>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n          jobType: \"\" // added for our select\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          lastName: Yup.string()\r\n            .max(20, \"Must be 20 characters or less\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email addresss`\")\r\n            .required(\"Required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions.\"),\r\n          jobType: Yup.string()\r\n            // specify the set of valid values for job type\r\n            // @see http://bit.ly/yup-mixed-oneOf\r\n            .oneOf(\r\n              [\"designer\", \"development\", \"product\", \"other\"],\r\n              \"Invalid Job Type\"\r\n            )\r\n            .required(\"Required\")\r\n        })}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        <Form>\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"Jane\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            placeholder=\"Doe\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"jane@formik.com\"\r\n          />\r\n          <MySelect label=\"Job Type\" name=\"jobType\">\r\n            <option value=\"\">Select a job type</option>\r\n            <option value=\"designer\">Designer</option>\r\n            <option value=\"development\">Developer</option>\r\n            <option value=\"product\">Product Manager</option>\r\n            <option value=\"other\">Other</option>\r\n          </MySelect>\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IMANewSaleForm;"]},"metadata":{},"sourceType":"module"}