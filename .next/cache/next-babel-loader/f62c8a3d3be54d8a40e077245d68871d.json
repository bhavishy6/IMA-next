{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\inventory.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport IMALayout from '../components/IMALayout';\nimport { ReactTabulator } from 'react-tabulator';\n\nvar InventoryPage = function InventoryPage(props) {\n  state: any = {\n    data: [],\n    selectedName: ''\n  };\n\n  ref: any = null;\n\n  rowClick = function rowClick(e, row) {\n    console.log('ref table: ', _this.ref.table); // this is the Tabulator table instance\n\n    console.log('rowClick id: ${row.getData().id}', row, e);\n\n    _this.setState({\n      selectedName: row.getData().name\n    });\n  };\n\n  setData = function setData() {\n    _this.setState({\n      data: data\n    });\n  };\n\n  clearData = function clearData() {\n    _this.setState({\n      data: []\n    });\n  };\n\n  return __jsx(IMALayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Inventory management table.\", __jsx(ReactTabulator, {\n    columns: props.columns,\n    data: props.inventory,\n    cellEdited: function cellEdited(cell) {\n      return console.log('cellEdited', cell);\n    },\n    dataEdited: function dataEdited(newData) {\n      return console.log('dataEdited', newData);\n    },\n    footerElement: __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Footer\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nInventoryPage.getInitialProps = function _callee() {\n  var res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:3000/api/inventory'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          console.log(\"Inventory fetched.\".concat(_JSON$stringify(json)));\n          return _context.abrupt(\"return\", {\n            inventory: json,\n            columns: [{\n              title: \"Product Name\",\n              field: \"name\",\n              sorter: \"string\",\n              width: 150\n            }, {\n              title: \"Stock\",\n              field: \"qty\",\n              sorter: \"number\"\n            }, {\n              title: \"Price\",\n              field: \"price\",\n              align: \"right\"\n            }]\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default InventoryPage;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/inventory.js"],"names":["fetch","IMALayout","ReactTabulator","InventoryPage","props","state","any","data","selectedName","ref","rowClick","e","row","console","log","table","setState","getData","name","setData","clearData","columns","inventory","cell","newData","getInitialProps","res","json","title","field","sorter","width","align"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC3BC,EAAAA,KAAK,EAAEC,GAAG,GAAG;AACTC,IAAAA,IAAI,EAAE,EADG;AAETC,IAAAA,YAAY,EAAE;AAFL,GAAN;;AAILC,EAAAA,GAAG,EAAEH,GAAG,GAAG,IAAN;;AAELI,EAAAA,QAAQ,GAAG,kBAACC,CAAD,EAAIC,GAAJ,EAAY;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAI,CAACL,GAAL,CAASM,KAApC,EADqB,CACuB;;AAC5CF,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD,EAAqDD,CAArD;;AACA,IAAA,KAAI,CAACK,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAEI,GAAG,CAACK,OAAJ,GAAcC;AAA9B,KAAd;AACD,GAJD;;AAMAC,EAAAA,OAAO,GAAG,mBAAM;AACd,IAAA,KAAI,CAACH,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAJA;AAAF,KAAd;AACD,GAFD;;AAGAa,EAAAA,SAAS,GAAG,qBAAM;AAChB,IAAA,KAAI,CAACJ,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAd;AACD,GAFD;;AAGF,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI,MAAC,cAAD;AAAgB,IAAA,OAAO,EAAEH,KAAK,CAACiB,OAA/B;AAAwC,IAAA,IAAI,EAAEjB,KAAK,CAACkB,SAApD;AAA+D,IAAA,UAAU,EAAE,oBAACC,IAAD;AAAA,aAAUV,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BS,IAA1B,CAAV;AAAA,KAA3E;AACI,IAAA,UAAU,EAAE,oBAACC,OAAD;AAAA,aAAaX,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BU,OAA1B,CAAb;AAAA,KADhB;AAEI,IAAA,aAAa,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAUH,CA7BD;;AA+BArB,aAAa,CAACsB,eAAd,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACVzB,KAAK,CAAC,qCAAD,CADK;;AAAA;AACtB0B,UAAAA,GADsB;AAAA;AAAA,2CAETA,GAAG,CAACC,IAAJ,EAFS;;AAAA;AAEtBA,UAAAA,IAFsB;AAG5Bd,UAAAA,OAAO,CAACC,GAAR,6BAAiC,gBAAea,IAAf,CAAjC;AAH4B,2CAIrB;AACHL,YAAAA,SAAS,EAAEK,IADR;AAEHN,YAAAA,OAAO,EAAE,CACL;AAAEO,cAAAA,KAAK,EAAE,cAAT;AAAyBC,cAAAA,KAAK,EAAE,MAAhC;AAAwCC,cAAAA,MAAM,EAAE,QAAhD;AAA0DC,cAAAA,KAAK,EAAE;AAAjE,aADK,EAEL;AAAEH,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,KAAK,EAAE,KAAzB;AAAgCC,cAAAA,MAAM,EAAE;AAAxC,aAFK,EAGL;AAAEF,cAAAA,KAAK,EAAE,OAAT;AAAkBC,cAAAA,KAAK,EAAE,OAAzB;AAAkCG,cAAAA,KAAK,EAAE;AAAzC,aAHK;AAFN,WAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AAcA,eAAe7B,aAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\nimport IMALayout from '../components/IMALayout';\r\nimport { ReactTabulator } from 'react-tabulator';\r\n\r\n\r\nconst InventoryPage = props => {\r\n    state: any = {\r\n        data: [],\r\n        selectedName: ''\r\n      };\r\n      ref: any = null;\r\n    \r\n      rowClick = (e, row) => {\r\n        console.log('ref table: ', this.ref.table); // this is the Tabulator table instance\r\n        console.log('rowClick id: ${row.getData().id}', row, e);\r\n        this.setState({ selectedName: row.getData().name });\r\n      };\r\n    \r\n      setData = () => {\r\n        this.setState({ data });\r\n      };\r\n      clearData = () => {\r\n        this.setState({ data: [] });\r\n      };\r\n    return (\r\n        <IMALayout>\r\n            <div className=\"container\">\r\n                Inventory management table.\r\n                <ReactTabulator columns={props.columns} data={props.inventory} cellEdited={(cell) => console.log('cellEdited', cell)}\r\n                    dataEdited={(newData) => console.log('dataEdited', newData)}\r\n                    footerElement={<span>Footer</span>} />\r\n            </div>\r\n        </IMALayout>\r\n    );\r\n}\r\n\r\nInventoryPage.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/inventory')\r\n    const json = await res.json()\r\n    console.log(`Inventory fetched.${JSON.stringify(json)}`);\r\n    return {\r\n        inventory: json,\r\n        columns: [\r\n            { title: \"Product Name\", field: \"name\", sorter: \"string\", width: 150 },\r\n            { title: \"Stock\", field: \"qty\", sorter: \"number\" },\r\n            { title: \"Price\", field: \"price\", align: \"right\" },\r\n        ]\r\n    }\r\n}\r\n\r\nexport default InventoryPage;"]},"metadata":{},"sourceType":"module"}