{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\components\\\\forms\\\\FormikAutocomplete.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Autocomplete from \"react-autocomplete\";\n\nconst FormikAutocomplete = (_ref) => {\n  let {\n    textFieldProps\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"textFieldProps\"]);\n\n  const {\n    form: {\n      setTouched,\n      setFieldValue\n    }\n  } = props;\n\n  const _fieldToTextField = fieldToTextField(props),\n        {\n    error,\n    helperText\n  } = _fieldToTextField,\n        field = _objectWithoutProperties(_fieldToTextField, [\"error\", \"helperText\"]);\n\n  const {\n    name\n  } = field;\n  return __jsx(Autocomplete, _extends({}, props, field, {\n    onChange: (_, value) => setFieldValue(name, value),\n    onBlur: () => setTouched({\n      [name]: true\n    }),\n    renderInput: props => __jsx(TextField, _extends({}, props, textFieldProps, {\n      helperText: helperText,\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default FormikAutocomplete;","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/components/forms/FormikAutocomplete.js"],"names":["React","Autocomplete","FormikAutocomplete","textFieldProps","props","form","setTouched","setFieldValue","fieldToTextField","error","helperText","field","name","_","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AAIA,MAAMC,kBAAkB,GAAG,UAAkC;AAAA,MAAjC;AAAEC,IAAAA;AAAF,GAAiC;AAAA,MAAZC,KAAY;;AAE3D,QAAM;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd;AAAR,MAA0CH,KAAhD;;AACA,4BAAwCI,gBAAgB,CAACJ,KAAD,CAAxD;AAAA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAN;AAAA,QAA8BC,KAA9B;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,SACE,MAAC,YAAD,eACMP,KADN,EAEMO,KAFN;AAGE,IAAA,QAAQ,EAAG,CAACE,CAAD,EAAIC,KAAJ,KAAcP,aAAa,CAACK,IAAD,EAAOE,KAAP,CAHxC;AAIE,IAAA,MAAM,EAAG,MAAMR,UAAU,CAAC;AAAE,OAACM,IAAD,GAAQ;AAAV,KAAD,CAJ3B;AAKE,IAAA,WAAW,EAAGR,KAAK,IACjB,MAAC,SAAD,eAAeA,KAAf,EAA0BD,cAA1B;AAA0C,MAAA,UAAU,EAAEO,UAAtD;AAAkE,MAAA,KAAK,EAAED,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD,CAjBD;;AAmBA,eAAeP,kBAAf","sourcesContent":["import React from 'react';\r\nimport Autocomplete from \"react-autocomplete\";\r\n\r\n\r\n\r\nconst FormikAutocomplete = ({ textFieldProps, ...props }) => {\r\n\r\n  const { form: { setTouched, setFieldValue } } = props;\r\n  const { error, helperText, ...field } = fieldToTextField(props);\r\n  const { name } = field;\r\n\r\n  return (\r\n    <Autocomplete\r\n      {...props}\r\n      {...field}\r\n      onChange={ (_, value) => setFieldValue(name, value) }\r\n      onBlur={ () => setTouched({ [name]: true }) }\r\n      renderInput={ props => (\r\n        <TextField {...props} {...textFieldProps} helperText={helperText} error={error} />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FormikAutocomplete;"]},"metadata":{},"sourceType":"module"}