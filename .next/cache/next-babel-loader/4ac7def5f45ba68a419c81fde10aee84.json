{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhavi\\\\Documents\\\\Coding\\\\IMA-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withIMALayout from '../components/IMALayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar moment = require('moment');\n\nmoment().format('L');\n\nconst Dashboard = ({\n  recentSalesData\n}) => {\n  console.log('recentSalesData' + JSON.stringify(recentSalesData));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"form to add new sale form to add new customer form to add new inventory item1\", __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, JSON.stringify(recentSalesData)));\n};\n\nDashboard.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30);\n  const json = await res.json();\n  console.log(`Show data fetched. ${JSON.stringify(json)}`);\n  return {\n    recentSalesData: getMostRecentFormattedSales(json)\n  };\n};\n\nfunction getMostRecentFormattedSales(sales) {\n  var recentSales = {};\n  sales.forEach((sale, index) => {\n    console.log(index + \":\" + sale[\"date\"]);\n    var date = moment(sale[\"date\"]).format(\"L\");\n    var quantities = sale[\"quantities\"]; // console.log(JSON.stringify(quantities))\n\n    if (recentSales[date]) {\n      console.log('this date exists' + date);\n      recentSales[date].forEach((product, index) => {\n        // console.log(\"existing product name for this day: \" + product['name'])\n        var sameProduct = findProductInQuantities(product[\"name\"], quantities);\n        console.log(JSON.stringify(sameProduct));\n\n        if (sameProduct === null) {} else {\n          // console.log(\"found same product: \" + JSON.stringify(product) + product['qty'] +\"+\\n \" + JSON.stringify(sameProduct))\n          product[\"qty\"] += sameProduct[\"qty\"];\n        }\n      }, recentSales[date]);\n    } else {\n      //this date does not yet exist in recentSales\n      recentSales[date] = sale[\"quantities\"];\n    }\n  });\n  console.log(\"map:  \" + JSON.stringify(recentSales));\n  return recentSales;\n}\n\n;\n\nfunction findProductInQuantities(name, quantities) {\n  var foundProduct = null;\n  quantities.forEach((product, index) => {\n    console.log(name + \"checking product name: \" + product['name']);\n\n    if (name == product['name']) {\n      console.log('true' + JSON.stringify(product));\n      foundProduct = product;\n    }\n  });\n  return foundProduct;\n}\n\nexport default withIMALayout(Dashboard);","map":{"version":3,"sources":["C:/Users/bhavi/Documents/Coding/IMA-next/pages/index.js"],"names":["withIMALayout","fetch","moment","require","format","Dashboard","recentSalesData","console","log","JSON","stringify","getInitialProps","res","json","getMostRecentFormattedSales","sales","recentSales","forEach","sale","index","date","quantities","product","sameProduct","findProductInQuantities","name","foundProduct"],"mappings":"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","sourcesContent":["import withIMALayout from '../components/IMALayout'\r\nimport fetch from 'isomorphic-unfetch'\r\nvar moment = require('moment')\r\nmoment().format('L');\r\n\r\nconst Dashboard = ({recentSalesData}) => {\r\n    console.log('recentSalesData'+ JSON.stringify(recentSalesData))\r\n    return (\r\n        <div>\r\n            form to add new sale\r\n            form to add new customer\r\n            form to add new inventory item1\r\n            <p>{JSON.stringify(recentSalesData)}</p>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nDashboard.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:3000/api/sales?daysAgo=' + 30)\r\n    const json = await res.json()\r\n    console.log(`Show data fetched. ${JSON.stringify(json)}`);\r\n    return { recentSalesData: getMostRecentFormattedSales(json) };\r\n}\r\n\r\nfunction getMostRecentFormattedSales(sales) {\r\n    var recentSales = {}\r\n    sales.forEach((sale, index) => {\r\n        console.log(index + \":\" + sale[\"date\"])\r\n        var date = moment(sale[\"date\"]).format(\"L\")\r\n        var quantities = sale[\"quantities\"]\r\n        // console.log(JSON.stringify(quantities))\r\n        if (recentSales[date]) {\r\n            console.log('this date exists' + date)\r\n            recentSales[date].forEach((product, index) => {\r\n                // console.log(\"existing product name for this day: \" + product['name'])\r\n                var sameProduct = findProductInQuantities(product[\"name\"], quantities)\r\n                console.log(JSON.stringify(sameProduct))\r\n                if (sameProduct === null) {\r\n                    \r\n                } else {\r\n                    // console.log(\"found same product: \" + JSON.stringify(product) + product['qty'] +\"+\\n \" + JSON.stringify(sameProduct))\r\n                    product[\"qty\"] += sameProduct[\"qty\"]\r\n                }\r\n            }, recentSales[date])\r\n        } else {\r\n            //this date does not yet exist in recentSales\r\n            recentSales[date] = sale[\"quantities\"]\r\n        }\r\n    })\r\n    console.log(\"map:  \" + JSON.stringify(recentSales))\r\n    return recentSales;\r\n};\r\n\r\nfunction findProductInQuantities(name, quantities) {\r\n    var foundProduct = null;\r\n    quantities.forEach((product, index) => {\r\n        console.log(name + \"checking product name: \" + product['name'])\r\n        if (name == product['name']) {\r\n            console.log('true' + JSON.stringify(product))\r\n            foundProduct = product;\r\n        }\r\n    });\r\n    return foundProduct;\r\n}\r\n\r\nexport default withIMALayout(Dashboard);"]},"metadata":{},"sourceType":"module"}